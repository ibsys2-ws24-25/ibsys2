generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Material {
  id                  String                   @id
  name                String                   @default("")
  itemValue           Float
  defaultStock        Int                      @default(100)
  MaterialsRequired   MaterialRequirement[]    @relation("RequirementToMaterial") // Materialien, die dieses Material benötigt
  MaterialsRequiredBy MaterialRequirement[]    @relation("MaterialToRequirements") // Materialien, die dieses Material benötigen
  Warehouse           Warehouse[]
  Forecast            Forecast[]
  ProductionPlan      ProductionPlanDecision[]
  deliveryTime        Float?
  variance            Float?
  Order               Order[]
}

model MaterialRequirement {
  id                 Int      @id @default(autoincrement())
  materialId         String
  requiredMaterialId String
  Material           Material @relation("RequirementToMaterial", fields: [materialId], references: [id]) // Material, das dieses Material benötigt
  RequiredMaterial   Material @relation("MaterialToRequirements", fields: [requiredMaterialId], references: [id]) // Material, das benötigt wird
  sum                Int      @default(1)
}

model Period {
  id             Int                      @id
  created        DateTime                 @default(now())
  Warehouse      Warehouse[]
  Forecast       Forecast[]
  ProductionPlan ProductionPlanDecision[]
}

model Warehouse {
  id         Int      @id @default(autoincrement())
  Period     Period   @relation(fields: [periodId], references: [id], onDelete: Cascade)
  Material   Material @relation(fields: [materialId], references: [id])
  amount     Int
  periodId   Int
  materialId String
}

model Forecast {
  id         Int      @id @default(autoincrement())
  Period     Period   @relation(fields: [periodId], references: [id], onDelete: Cascade)
  Material   Material @relation(fields: [materialId], references: [id])
  forPeriod  Int
  periodId   Int
  materialId String
  amount     Int
}

model ProductionPlanDecision {
  id          Int      @id @default(autoincrement())
  Period      Period   @relation(fields: [periodId], references: [id], onDelete: Cascade)
  Material    Material @relation(fields: [materialId], references: [id])
  periodId    Int
  materialId  String
  safetyStock Int
  productId   String
  forPeriod   Int?  

  @@unique([periodId, materialId, productId, forPeriod])
}

model Order {
  id          Int      @id @default(autoincrement())
  orderId     Int? 
  orderPeriod Int
  mode        Int
  Material    Material @relation(fields: [materialId], references: [id])
  amount      Int 
  materialId  String

  @@unique([orderPeriod, materialId])
}

model Setting {
  name  String @id
  value String
}
